@model Lesson
@{
    ViewData["Title"] = "Edit Lesson";
}

<style>
    body {
        background-color: #f8f9fa;
    }

    .edit-card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }

    .edit-header {
        background: linear-gradient(135deg, #ffc107, #ff8f00);
        color: white;
        border-radius: 15px 15px 0 0;
        padding: 25px;
    }

    .form-control, .form-select {
        border-radius: 10px;
        border: 2px solid #e9ecef;
        padding: 12px 15px;
        transition: all 0.3s ease;
    }

        .form-control:focus, .form-select:focus {
            border-color: #ffc107;
            box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.25);
        }

    .btn {
        border-radius: 10px;
        padding: 12px 30px;
        font-weight: 600;
    }

    .form-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 8px;
    }

    .current-info {
        background: linear-gradient(45deg, #17a2b8, #138496);
        border-radius: 10px;
        padding: 15px;
        color: white;
        margin-bottom: 20px;
    }

    .video-preview {
        border-radius: 10px;
        max-height: 200px;
        object-fit: cover;
    }
</style>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-10 col-xl-8">
            <div class="card edit-card">
                <div class="edit-header">
                    <h2 class="mb-0">
                        <i class="fas fa-edit me-3"></i>Edit Lesson
                    </h2>
                    <p class="mb-0 mt-2 opacity-75">Update your lesson content and settings</p>
                </div>

                <div class="card-body p-4">
                    <!-- Current Lesson Info -->
                    <div class="current-info">
                        <div class="row">
                            <div class="col-md-8">
                                <h6 class="mb-1">
                                    <i class="fas fa-info-circle me-2"></i>Current Lesson Info
                                </h6>
                                <p class="mb-1">Course: <strong>@(Model.Course?.Title ?? "Unknown Course")</strong></p>
                                <p class="mb-0">Order: <strong>#@Model.OrderIndex</strong> | Lesson ID: <strong>@Model.LessonId</strong></p>
                            </div>
                            <div class="col-md-4 text-end">
                                <div class="badge bg-light text-dark fs-6">
                                    <i class="fas fa-edit me-1"></i>Editing Mode
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Success/Error Messages -->
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <form asp-action="Edit" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="LessonId" />

                        <!-- Course Selection -->
                        <div class="mb-4">
                            <label asp-for="CourseId" class="form-label">
                                <i class="fas fa-book me-2 text-primary"></i>Course
                            </label>
                            <select asp-for="CourseId" class="form-select form-select-lg" asp-items="ViewBag.Courses">
                                <option value="">-- Choose a Course --</option>
                            </select>
                            <span asp-validation-for="CourseId" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Change the course this lesson belongs to
                            </div>
                        </div>

                        <!-- Lesson Title -->
                        <div class="mb-4">
                            <label asp-for="Title" class="form-label">
                                <i class="fas fa-heading me-2 text-primary"></i>Lesson Title
                            </label>
                            <input asp-for="Title" type="text" class="form-control form-control-lg"
                                   placeholder="Enter an engaging lesson title" maxlength="200" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                            <div class="form-text">
                                Make it descriptive and engaging for your students
                            </div>
                        </div>

                        <!-- Video URL with Preview -->
                        <div class="mb-4">
                            <label asp-for="VideoUrl" class="form-label">
                                <i class="fas fa-video me-2 text-danger"></i>Video URL
                            </label>
                            <div class="input-group">
                                <input asp-for="VideoUrl" type="url" class="form-control"
                                       placeholder="https://youtube.com/watch?v=..." id="videoUrlInput" />
                                <button type="button" class="btn btn-outline-secondary" id="previewBtn">
                                    <i class="fas fa-eye"></i> Preview
                                </button>
                            </div>
                            <span asp-validation-for="VideoUrl" class="text-danger"></span>

                            @if (!string.IsNullOrEmpty(Model.VideoUrl))
                            {
                                <div class="mt-3">
                                    <div class="alert alert-info">
                                        <i class="fas fa-video me-2"></i>
                                        <strong>Current Video:</strong>
                                        <a href="@Model.VideoUrl" target="_blank" class="alert-link">
                                            @(Model.VideoUrl.Length > 50 ? Model.VideoUrl.Substring(0, 50) + "..." : Model.VideoUrl)
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-primary ms-2" onclick="window.open('@Model.VideoUrl', '_blank')">
                                            <i class="fas fa-external-link-alt"></i> Open
                                        </button>
                                    </div>
                                </div>
                            }

                            <div class="form-text">
                                <i class="fas fa-lightbulb me-1 text-warning"></i>
                                Add a YouTube, Vimeo, or direct video link (optional)
                            </div>
                        </div>

                        <!-- Lesson Content with Character Counter -->
                        <div class="mb-4">
                            <label asp-for="Content" class="form-label">
                                <i class="fas fa-align-left me-2 text-success"></i>Lesson Content
                            </label>
                            <textarea asp-for="Content" class="form-control" rows="10"
                                      placeholder="Write your lesson content here..."
                                      id="contentTextarea" maxlength="5000"></textarea>
                            <span asp-validation-for="Content" class="text-danger"></span>
                            <div class="d-flex justify-content-between">
                                <div class="form-text">
                                    <i class="fas fa-markdown me-1"></i>
                                    Provide detailed content that complements your video
                                </div>
                                <div class="form-text">
                                    <span id="charCount">0</span>/5000 characters
                                </div>
                            </div>
                        </div>

                        <!-- Order Index with Smart Suggestions -->
                        <div class="mb-4">
                            <div class="row">
                                <div class="col-md-6">
                                    <label asp-for="OrderIndex" class="form-label">
                                        <i class="fas fa-sort-numeric-up me-2 text-info"></i>Lesson Order
                                    </label>
                                    <input asp-for="OrderIndex" type="number" class="form-control form-control-lg"
                                           min="1" max="999" />
                                    <span asp-validation-for="OrderIndex" class="text-danger"></span>
                                    <div class="form-text">
                                        Set the order of this lesson in the course sequence
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Quick Actions</label>
                                    <div class="d-grid gap-2">
                                        <button type="button" class="btn btn-outline-info btn-sm" onclick="moveUp()">
                                            <i class="fas fa-arrow-up me-1"></i>Move Up
                                        </button>
                                        <button type="button" class="btn btn-outline-info btn-sm" onclick="moveDown()">
                                            <i class="fas fa-arrow-down me-1"></i>Move Down
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-flex justify-content-between align-items-center mt-5 pt-4 border-top">
                            <a asp-action="Index" asp-route-courseId="@Model.CourseId" class="btn btn-outline-secondary btn-lg">
                                <i class="fas fa-arrow-left me-2"></i>Back to Lessons
                            </a>
                            <div>
                                <a asp-action="Delete" asp-route-id="@Model.LessonId" class="btn btn-outline-danger me-2"
                                   onclick="return confirm('Are you sure you want to delete this lesson?')">
                                    <i class="fas fa-trash me-2"></i>Delete Lesson
                                </a>
                                <button type="button" class="btn btn-outline-warning me-2" onclick="resetForm()">
                                    <i class="fas fa-undo me-2"></i>Reset Changes
                                </button>
                                <button type="submit" class="btn btn-warning btn-lg">
                                    <i class="fas fa-save me-2"></i>Update Lesson
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Video Preview Modal -->
<div class="modal fade" id="videoPreviewModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-video me-2"></i>Video Preview
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="videoContainer" class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const videoUrlInput = document.getElementById('videoUrlInput');
        const previewBtn = document.getElementById('previewBtn');
        const contentTextarea = document.getElementById('contentTextarea');
        const charCountElement = document.getElementById('charCount');
        const orderInput = document.querySelector('input[name="OrderIndex"]');

        let originalFormData = {};

        // Store original form data for reset functionality
        function storeOriginalData() {
            originalFormData = {
                title: document.querySelector('input[name="Title"]').value,
                videoUrl: videoUrlInput.value,
                content: contentTextarea.value,
                orderIndex: orderInput.value,
                courseId: document.querySelector('select[name="CourseId"]').value
            };
        }

        // Initialize original data
        storeOriginalData();

        // Character counter for content textarea
        function updateCharCount() {
            const count = contentTextarea.value.length;
            charCountElement.textContent = count;
            charCountElement.className = count > 4500 ? 'text-danger' : count > 4000 ? 'text-warning' : 'text-muted';
        }

        if (contentTextarea && charCountElement) {
            updateCharCount();
            contentTextarea.addEventListener('input', updateCharCount);
        }

        // Video preview functionality
        if (previewBtn && videoUrlInput) {
            previewBtn.addEventListener('click', function() {
                const url = videoUrlInput.value.trim();
                if (!url) {
                    alert('Please enter a video URL first');
                    return;
                }

                const videoContainer = document.getElementById('videoContainer');
                const videoModal = new bootstrap.Modal(document.getElementById('videoPreviewModal'));

                if (isYouTubeUrl(url)) {
                    const videoId = extractYouTubeId(url);
                    if (videoId) {
                        videoContainer.innerHTML = `
                            <iframe width="100%" height="450"
                                    src="https://www.youtube.com/embed/${videoId}"
                                    frameborder="0" allowfullscreen>
                            </iframe>
                        `;
                        videoModal.show();
                    }
                } else if (isVimeoUrl(url)) {
                    const videoId = extractVimeoId(url);
                    if (videoId) {
                        videoContainer.innerHTML = `
                            <iframe width="100%" height="450"
                                    src="https://player.vimeo.com/video/${videoId}"
                                    frameborder="0" allowfullscreen>
                            </iframe>
                        `;
                        videoModal.show();
                    }
                } else if (isDirectVideoUrl(url)) {
                    videoContainer.innerHTML = `
                        <video width="100%" height="450" controls>
                            <source src="${url}" type="video/mp4">
                            Your browser does not support the video tag.
                        </video>
                    `;
                    videoModal.show();
                } else {
                    alert('Please enter a valid YouTube, Vimeo, or direct video URL');
                }
            });
        }

        // Video URL validation
        if (videoUrlInput) {
            videoUrlInput.addEventListener('blur', function() {
                const url = this.value.trim();
                if (url && !isValidVideoUrl(url)) {
                    this.classList.add('is-invalid');
                    showValidationError(this, 'Please enter a valid video URL (YouTube, Vimeo, or direct video link)');
                } else {
                    this.classList.remove('is-invalid');
                    removeValidationError(this);
                }
            });
        }

        // Global functions for order manipulation
        window.moveUp = function() {
            const currentOrder = parseInt(orderInput.value) || 1;
            if (currentOrder > 1) {
                orderInput.value = currentOrder - 1;
            }
        };

        window.moveDown = function() {
            const currentOrder = parseInt(orderInput.value) || 1;
            orderInput.value = currentOrder + 1;
        };

        // Reset form functionality
        window.resetForm = function() {
            if (confirm('Are you sure you want to reset all changes?')) {
                document.querySelector('input[name="Title"]').value = originalFormData.title;
                videoUrlInput.value = originalFormData.videoUrl;
                contentTextarea.value = originalFormData.content;
                orderInput.value = originalFormData.orderIndex;
                document.querySelector('select[name="CourseId"]').value = originalFormData.courseId;
                updateCharCount();
            }
        };

        // Utility functions
        function isYouTubeUrl(url) {
            return /^https?:\/\/(www\.)?(youtube\.com|youtu\.be)/.test(url);
        }

        function isVimeoUrl(url) {
            return /^https?:\/\/(www\.)?vimeo\.com/.test(url);
        }

        function isDirectVideoUrl(url) {
            return /^https?:\/\/.*\.(mp4|webm|ogg|avi|mov)$/i.test(url);
        }

        function extractYouTubeId(url) {
            const match = url.match(/(?:https?:\/\/)?(?:www\.)?(?:youtube\.com|youtu\.be)\/(?:watch\?v=|embed\/|v\/)?([a-zA-Z0-9\-_]{11})/);
            return match ? match[1] : null;
        }

        function extractVimeoId(url) {
            const match = url.match(/(?:https?:\/\/)?(?:www\.)?vimeo\.com\/(\d+)/);
            return match ? match[1] : null;
        }

        function isValidVideoUrl(url) {
            return isYouTubeUrl(url) || isVimeoUrl(url) || isDirectVideoUrl(url);
        }

        function showValidationError(element, message) {
            removeValidationError(element);
            const feedback = document.createElement('div');
            feedback.className = 'invalid-feedback';
            feedback.textContent = message;
            element.parentNode.appendChild(feedback);
        }

        function removeValidationError(element) {
            const feedback = element.parentNode.querySelector('.invalid-feedback');
            if (feedback) {
                feedback.remove();
            }
        }
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}