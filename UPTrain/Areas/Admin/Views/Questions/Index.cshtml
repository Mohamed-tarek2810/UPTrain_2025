@model IEnumerable<UPTrain.Models.Question>
@{
    ViewData["Title"] = "Questions";
    var quizId = ViewBag.QuizId;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Manage Questions</h2>
    <a asp-action="Create" class="btn btn-success">Add New Question</a>
</div>


<div class="mb-3">
    <form method="get" asp-action="Index">
        <div class="row">
            <div class="col-md-6">
                <label class="form-label">Filter by Quiz:</label>
                <select name="quizId" class="form-select" onchange="this.form.submit()">
                    <option value="">All Quizzes</option>
                    @foreach (var quiz in (SelectList)ViewBag.Quizzes)
                    {
                        <option value="@quiz.Value" selected="@quiz.Selected">@quiz.Text</option>
                    }
                </select>
            </div>
        </div>
    </form>
</div>

@if (Model.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th style="width: 25%">Question Text</th>
                    <th style="width: 15%">Option A</th>
                    <th style="width: 15%">Option B</th>
                    <th style="width: 15%">Option C</th>
                    <th style="width: 15%">Option D</th>
                    <th style="width: 10%">Correct Answer</th>
                    <th style="width: 5%">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var question in Model)
                {
                    <tr>
                        <td>
                            <div class="question-text">
                                @(question.QuestionText.Length > 100 ? question.QuestionText.Substring(0, 100) + "..." : question.QuestionText)
                            </div>
                            <small class="text-muted">Quiz: @question.Quiz?.Title</small>
                        </td>
                        <td>@(question.OptionA.Length > 30 ? question.OptionA.Substring(0, 30) + "..." : question.OptionA)</td>
                        <td>@(question.OptionB.Length > 30 ? question.OptionB.Substring(0, 30) + "..." : question.OptionB)</td>
                        <td>@(question.OptionC.Length > 30 ? question.OptionC.Substring(0, 30) + "..." : question.OptionC)</td>
                        <td>@(question.OptionD.Length > 30 ? question.OptionD.Substring(0, 30) + "..." : question.OptionD)</td>
                        <td>
                            <span class="badge bg-success">@question.CorrectAnswer</span>
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@question.QuestionId" class="btn btn-primary btn-sm" title="Edit">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@question.QuestionId" class="btn btn-danger btn-sm" title="Delete">
                                    <i class="fas fa-trash"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-info">
        <h4>No Questions Available</h4>
        <p>No questions have been created yet. Start by adding a new question.</p>
    </div>
}

<div class="mt-4">
    <a asp-controller="Quizzes" asp-action="Index" class="btn btn-secondary">Back to Quizzes</a>
</div>

<style>
    .question-text {
        font-weight: 500;
        line-height: 1.4;
    }

    .table th {
        border-top: none;
        vertical-align: middle;
    }

    .table td {
        vertical-align: middle;
        padding: 12px 8px;
    }

    .btn-group .btn {
        margin: 0 2px;
    }
</style>
